generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rooms     Room[]
  chats     Chat[]
  Shapes    Shapes[]
}

model Room {
  id        Int      @id @default(autoincrement())
  slug      String   @unique
  adminId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  admin     User     @relation(fields: [adminId], references: [id])
  chats     Chat[]
  Shapes    Shapes[]
}

model Chat {
  id      Int    @id @default(autoincrement())
  roomId  Int
  userId  String
  message String
  room    Room   @relation(fields: [roomId], references: [id])
  user    User   @relation(fields: [userId], references: [id])
}

enum shapeType {
  RECTANGLE
  CIRCLE
  LINE
  ERASER
  PENCIL
}

model Shapes {
  id         Int       @id @default(autoincrement())
  type       shapeType
  startX     Int
  startY     Int
  color      String?
  height     Int
  width      Int
  lineWidth  Int?
  endX       Int?
  endY       Int?
  radius     Int?
  pencilPath Json?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  // creating direct relation with room model
  roomId Int
  room   Room @relation(fields: [roomId], references: [id])

  // creating direct relation with user model then we can understand the who draw's the shapes ? 
  userId String
  user   User   @relation(fields: [userId], references: [id])
}
